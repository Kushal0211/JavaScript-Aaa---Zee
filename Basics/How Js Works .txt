JS creates Global excution context 

2.Next it creates memory phase

3.Memory phase - In this phase,the variables are set to undefined 

  until the execution phase(next phase) and the functions are set to their definitions.

4.Next it creates the execution phase

5.Execution phase - In this phase,the variables are initialsed to given values and 

  when the function s are called,it creates a memory phase and execution phase for the function 

  just like the main one.

For live demo:
browser > inspect > Sources
create a snippet with few functions and visually experience the call stack.

correct me if there are any mistakes or add to this if something is missing.


Ans2 ------------------------------------------------------------------------------------------------------------------------------

Here is the notes guys hope it will hep you to save your time-

*How JavaScript works?

Ans-Everything in JavaScript happens inside an "execution context".



Execution context has two component

1)memory component[variable environment] 

-This is the place where all variables and functions are stored as key value pairs. eg-{key: value ||  n:2;} 



 2)code component[Thread of execution]

-This is the place where code is executed one line at a time



Note-

*JavaScript is a synchronous single-threaded language



-Single threaded means JavaScript can execute once command at a time

-Synchronous single-threaded that means JavaScript can execute one command at a time in a specific order.